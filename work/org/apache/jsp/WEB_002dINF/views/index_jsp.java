/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.38
 * Generated at: 2017-12-12 07:20:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("file:/C:/Users/Norman/.m2/repository/org/springframework/spring-webmvc/5.0.0.RELEASE/spring-webmvc-5.0.0.RELEASE.jar", Long.valueOf(1510910635295L));
    _jspx_dependants.put("jar:file:/C:/Users/Norman/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar!/META-INF/c.tld", Long.valueOf(1098682290000L));
    _jspx_dependants.put("file:/C:/Users/Norman/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar", Long.valueOf(1510417449663L));
    _jspx_dependants.put("/commons/taglibs.jsp", Long.valueOf(1510910500534L));
    _jspx_dependants.put("jar:file:/C:/Users/Norman/.m2/repository/org/springframework/spring-webmvc/5.0.0.RELEASE/spring-webmvc-5.0.0.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1506567796000L));
    _jspx_dependants.put("jar:file:/C:/Users/Norman/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar!/META-INF/fmt.tld", Long.valueOf(1098682290000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>我的简历</title>\r\n");
      out.write("<!-- for-mobile-apps -->\r\n");
      out.write("<!--width 属性控制设备的宽度。假设您的网站将被带有不同屏幕分辨率的设备浏览，那么将它设置为 device-width 可以确保它能正确呈现在不同设备上。initial-scale=1.0 确保网页加载时，以 1:1 的比例呈现，不会有任何的缩放 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<!-- 引用jQuery原生的js文件 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"plugins/jquery-1.9.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"plugins/jquery.form.js\"></script>\r\n");
      out.write("<!-- 引用bootstrap原生的css文件 -->\r\n");
      out.write("<link href=\"plugins/bootstrap/bootstrap.css\" rel=\"stylesheet\"\r\n");
      out.write("\ttype=\"text/css\" media=\"all\" />\r\n");
      out.write("<!-- 引用bootstrap原生的js文件 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"plugins/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"plugins/circles/circles.js\"></script>\r\n");
      out.write("<!-- 引用自定义的css文件 -->\r\n");
      out.write("<link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\" />\r\n");
      out.write("<link href=\"css/button.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\" />\r\n");
      out.write("<!-- 引入日期选择器插件 -->\r\n");
      out.write("<link href=\"plugins/air-datepicker/css/datepicker.min.css\"\r\n");
      out.write("\trel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script src=\"plugins/air-datepicker/js/datepicker.min.js\"></script>\r\n");
      out.write("<!-- 日期选择器引入中文语言 -->\r\n");
      out.write("<script src=\"plugins/air-datepicker/js/i18n/datepicker.zh.js\"></script>\r\n");
      out.write("<link href=\"plugins/waitme/waitMe.css\" rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\tmedia=\"all\" />\r\n");
      out.write("<script src=\"plugins/waitme/waitMe.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"banner\" id=\"home\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<!-- container class 用于包裹页面上的内容 -->\r\n");
      out.write("\t\t\t<div class=\"top-header row\">\r\n");
      out.write("\t\t\t\t<!-- 实现弹出隐藏导航栏的效果js -->\r\n");
      out.write("\t\t\t\t<!--top-nav-->\r\n");
      out.write("\t\t\t\t<div class=\"logo\">轻实训</div>\r\n");
      out.write("\t\t\t\t<div class=\"top-nav\">\r\n");
      out.write("\t\t\t\t\t<div class=\"nav-icon\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" class=\"right-bt\" id=\"activator\"><span> </span> </a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"box\" id=\"box\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"box-content\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"box-content-center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-content\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"menu-box-list\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a class=\"scroll\" href=\"#home\"><span>首页</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a class=\"scroll\" href=\"#about\"><span>关于我</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a class=\"scroll\" href=\"#skills\"><span>专业技能</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a class=\"scroll\" href=\"#education\"><span>教育经历</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a class=\"scroll\" href=\"#experience\"><span>工作经验</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a class=\"scroll\" href=\"#honor\"><span>荣誉&证书</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a class=\"scroll\" href=\"#hobby\"><span>爱好</span></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<a class=\"boxclose\" id=\"boxclose\"> <span></span></a>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!---start-click-drop-down-menu-->\r\n");
      out.write("\t\t\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"banner-info row\">\r\n");
      out.write("\t\t\t\t<div class=\"banner-left col-md-3 col-md-offset-2\">\r\n");
      out.write("\t\t\t\t\t<!-- 为了在大屏幕显示器上使用偏移，使用 .col-md-offset-* 类。这些类会把一个列的左外边距（margin）增加 * 列，其中 * 范围是从 1 到 11。 -->\r\n");
      out.write("\t\t\t\t\t<img src=\"images/my-avatar.png\" alt=\"\" id=\"myimage\" width=\"269px\"\r\n");
      out.write("\t\t\t\t\t\theight=\"269px\" style=\"border-radius: 50%\" />\r\n");
      out.write("\t\t\t\t\t<p class=\"upload-avatar-btn\"\r\n");
      out.write("\t\t\t\t\t\tonclick=\"document.getElementById('image').click();\">请选择你的头像</p>\r\n");
      out.write("\t\t\t\t\t<input type=\"file\" name=\"imageFile\" id=\"image\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"display: none\" onchange=\"changImg(event)\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"banner-right col-md-7\">\r\n");
      out.write("\t\t\t\t\t<!-- 使用.col-md-*类，在中型设备台式电脑（≥992px）中分成12等宽，其中占*等分 -->\r\n");
      out.write("\t\t\t\t\t<h1>轻实训</h1>\r\n");
      out.write("\t\t\t\t\t<div class=\"border\"></div>\r\n");
      out.write("\t\t\t\t\t<h2>一个有理想的程序员！</h2>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!--about-->\r\n");
      out.write("\t<div class=\"about\" id=\"about\"></div>\r\n");
      out.write("\t<!--my skill-->\r\n");
      out.write("\t<div class=\"my-skills text-center\" id=\"skills\"></div>\r\n");
      out.write("\t<!--education-->\r\n");
      out.write("\t<div class=\"education\" id=\"education\"></div>\r\n");
      out.write("\t<!--work-->\r\n");
      out.write("\t<div class=\"work-experience text-center\" id=\"experience\"></div>\r\n");
      out.write("\t<!--honor-->\r\n");
      out.write("\t<div class=\"honor text-center\" id=\"honor\"></div>\r\n");
      out.write("\t<!--hobby-->\r\n");
      out.write("\t<div class=\"hobby text-center\" id=\"hobby\"></div>\r\n");
      out.write("\t<!--contact-->\r\n");
      out.write("\t<div class=\"contact\" id=\"contact\"></div>\r\n");
      out.write("\t<div class=\"download-resume text-center\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"strip text-center\">\r\n");
      out.write("\t\t\t\t<img src=\"images/down.png\" alt=\" \">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"down\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">下载我的简历</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!--footer-->\r\n");
      out.write("\t<div class=\"footer\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<p>Copyright &copy; 2017.轻实训版权所有.</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"editPanel\" class=\"edit-panel\"></div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\tlist();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar path = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\tvar $ = jQuery.noConflict();\r\n");
      out.write("\r\n");
      out.write("\t\t//图片回显\r\n");
      out.write("\t\tfunction changImg(e) {\r\n");
      out.write("\t\t\tfor (var i = 0; i < e.target.files.length; i++) {\r\n");
      out.write("\t\t\t\tvar file = e.target.files.item(i);\r\n");
      out.write("\t\t\t\tif (!(/^image\\/.*$/i.test(file.type))) {\r\n");
      out.write("\t\t\t\t\tcontinue; //不是图片 就跳出这一次循环  \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t//实例化FileReader API  \r\n");
      out.write("\t\t\t\tvar freader = new FileReader();\r\n");
      out.write("\t\t\t\tfreader.readAsDataURL(file);\r\n");
      out.write("\t\t\t\tfreader.onload = function(e) {\r\n");
      out.write("\t\t\t\t\t$(\"#myimage\").attr(\"src\", e.target.result);\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction addorupdate() {\r\n");
      out.write("\t\t\t$(\".edit,.btn-sm\").on(\"click\", function() {\r\n");
      out.write("\t\t\t\tvar $this = $(this);\r\n");
      out.write("\t\t\t\tvar path = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\tvar url = $this.data(\"url\");\r\n");
      out.write("\t\t\t\tvar id = $this.data(\"id\");\r\n");
      out.write("\t\t\t\t//隐藏/显示DIV\r\n");
      out.write("\t\t\t\t$('.addorupdate').toggle();\r\n");
      out.write("\t\t\t\t$('.addorupdate').load(path + url, {\r\n");
      out.write("\t\t\t\t\tid : id\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//删除\r\n");
      out.write("\t\tfunction remove() {\r\n");
      out.write("\t\t\t$(\".delete\").on(\"click\", function() {\r\n");
      out.write("\t\t\t\tvar $this = $(this);\r\n");
      out.write("\t\t\t\tvar path = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\tvar url = $this.data(\"url\");\r\n");
      out.write("\t\t\t\tvar id = $this.data(\"id\");\r\n");
      out.write("\t\t\t\tif (!confirm(\"确定删除该项内容?\")) {\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$(\"#editPanel\").load(path + url, {\r\n");
      out.write("\t\t\t\t\tid : id\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tlist();\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction hideAndSumbit() {\r\n");
      out.write("\t\t\t$('.cancel-btn,.closeedit').on('click', function() {\r\n");
      out.write("\t\t\t\t//隐藏窗口\r\n");
      out.write("\t\t\t\t$('.addorupdate').hide();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\".save-btn\").on(\"click\", function() {\r\n");
      out.write("\t\t\t\t$(\"form\").trigger(\"submit\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//关闭编辑窗口\r\n");
      out.write("\t\tfunction closeeditPanel() {\r\n");
      out.write("\t\t\t$('.cancel-btn,.save-btn').on('click', function(event) {\r\n");
      out.write("\t\t\t\tevent.preventDefault();\r\n");
      out.write("\t\t\t\t$('#editPanel').animate({\r\n");
      out.write("\t\t\t\t\t'left' : '0px',\r\n");
      out.write("\t\t\t\t\t'bottom' : '-600px'\r\n");
      out.write("\t\t\t\t}, 300);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//关闭 添加/更新窗口\r\n");
      out.write("\t\tfunction closeeditorupdatePanel() {\r\n");
      out.write("\t\t\t$('.cancel-btn,.save-btn').on('click', function(event) {\r\n");
      out.write("\t\t\t\tevent.preventDefault();\r\n");
      out.write("\t\t\t\t$('.addorupdate').animate({\r\n");
      out.write("\t\t\t\t\t'left' : '0px',\r\n");
      out.write("\t\t\t\t\t'bottom' : '-600px'\r\n");
      out.write("\t\t\t\t}, 300);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//显示首页面\r\n");
      out.write("\t\tfunction list() {\r\n");
      out.write("\t\t\t$(\"#about\").load(path + \"/me/list\");\r\n");
      out.write("\t\t\t$(\"#skills\").load(path + \"/skill/list\");\r\n");
      out.write("\t\t\t$(\"#education\").load(path + \"/education/list\");\r\n");
      out.write("\t\t\t$(\"#experience\").load(path + \"/workexperence/list\");\r\n");
      out.write("\t\t\t$(\"#honor\").load(path + \"/honor/list\");\r\n");
      out.write("\t\t\t$(\"#hobby\").load(path + \"/hobby/list\");\r\n");
      out.write("\t\t\t$(\"#contact\").load(path + \"/index/contact\")\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//表单提交\r\n");
      out.write("\t\tfunction formsubmit() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\".save-btn\").on(\"click\", function() {\r\n");
      out.write("\t\t\t\t$(\"form\").trigger(\"submit\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"form\").on(\"submit\", function(e) {\r\n");
      out.write("\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\tvar $this = $(this);\r\n");
      out.write("\t\t\t\t// jquery-form的异步提交方式\r\n");
      out.write("\t\t\t\t$this.ajaxSubmit({\r\n");
      out.write("\t\t\t\t\tbeforeSubmit : function(data) {\r\n");
      out.write("\t\t\t\t\t\talert(JSON.stringify(data)); \r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tsuccess : function() {\r\n");
      out.write("\t\t\t\t\t\tlist();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\t//从浏览器底部弹出编辑窗口\r\n");
      out.write("\t\t\t$('body').on('click', '.edit-btn', function(event) {\r\n");
      out.write("\t\t\t\tevent.preventDefault();\r\n");
      out.write("\t\t\t\tvar url = $(this).data('url');\r\n");
      out.write("\t\t\t\t$('#editPanel').load(path + url);\r\n");
      out.write("\t\t\t\t$('#editPanel').animate({\r\n");
      out.write("\t\t\t\t\t'left' : '0px',\r\n");
      out.write("\t\t\t\t\t'bottom' : '0px'\r\n");
      out.write("\t\t\t\t}, 300);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t//关闭编辑窗口\r\n");
      out.write("\t\t\t$('#editPanel').on('click', '.close', function(event) {\r\n");
      out.write("\t\t\t\tevent.preventDefault();\r\n");
      out.write("\t\t\t\t$('#editPanel').animate({\r\n");
      out.write("\t\t\t\t\t'left' : '0px',\r\n");
      out.write("\t\t\t\t\t'bottom' : '-600px'\r\n");
      out.write("\t\t\t\t}, 300);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t//弹出顶部导航菜单\r\n");
      out.write("\t\t\t$('#activator').click(function() {\r\n");
      out.write("\t\t\t\t$('#box').animate({\r\n");
      out.write("\t\t\t\t\t'top' : '0px'\r\n");
      out.write("\t\t\t\t}, 500);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t//关闭顶部导航菜单\r\n");
      out.write("\t\t\t$('#boxclose').click(function() {\r\n");
      out.write("\t\t\t\t$('#box').animate({\r\n");
      out.write("\t\t\t\t\t'top' : '-1000px'\r\n");
      out.write("\t\t\t\t}, 500);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /commons/taglibs.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("ctx");
      // /commons/taglibs.jsp(4,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    }
    return false;
  }
}
